#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        BT1 {
            bindings = <&bt BT_PRV>;
            key-positions = <6 5 7>;
        };

        BT2 {
            bindings = <&bt BT_NXT>;
            key-positions = <6 7 8>;
        };

        Ex {
            bindings = <&kp EXCLAMATION>;
            key-positions = <4 2>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <38 41>;
        };

        control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <40 39>;
        };

        click1_Ons {
            bindings = <&mkp MB1>;
            key-positions = <18 30>;
        };

        click2_Ons {
            bindings = <&mkp MB2>;
            key-positions = <20 32>;
        };

        click3_Ons {
            bindings = <&mkp MB3>;
            key-positions = <19 31>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 6 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

 behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <20>;
        };

    keymap {
        compatible = "zmk,keymap";

        layer_6_Onishi_kai {
            bindings = <
&kp Q           &kp L         &kp COMMA     &kp U             &kp PERIOD                                                  &kp G         &kp Z  &kp D  &kp J  &kp B
&kp F           &kp V         &kp I         &kp A             &kp E       &kp PRINTSCREEN      &kp MINUS                  &kp K         &kp S  &kp T  &kp N  &kp H
&kp LEFT_SHIFT  &kp X         &kp C         &kp O             &kp SLASH   &kp SEMICOLON        &kp SQT                    &kp M         &kp Y  &kp R  &kp W  &kp P
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt 2 LANGUAGE_2  &kp SPACE   &kp BACKSPACE        &lt_to_layer_0 1 INT_KANA  &kp KP_ENTER                       &to 6
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION_Number {
            bindings = <
&kp ESC  &kp F1  &kp F2   &kp F3   &kp F4                       &kp TILDE             &kp N7        &kp N8        &kp N9        &kp MINUS
&none    &kp F5  &kp F6   &kp F7   &kp F8   &trans      &none   &kp LEFT_PARENTHESIS  &kp NUMBER_4  &kp NUMBER_5  &kp N6        &kp SLASH
&none    &kp F9  &kp F10  &kp F11  &kp F12  &none       &none   &kp NUMBER_0          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT
&none    &none   &none    &trans   &trans   &trans      &trans  &trans                                                          &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_Arrow {
            bindings = <
&kp HASH       &kp ASTERISK  &kp EXCLAMATION  &kp DOLLAR  &kp QUESTION                                               &kp LG(LS(LEFT))          &kp LS(LC(TAB))  &kp UP_ARROW    &kp LS(LC(TAB))  &kp LG(LS(RIGHT))
&kp LCTRL      &kp COLON     &kp MINUS        &kp CARET   &kp LS(NUMBER_2)  &trans                 &kp ASTERISK      &kp LS(LEFT_PARENTHESIS)  &kp LEFT         &kp DOWN_ARROW  &kp RIGHT        &none
&kp SEMICOLON  &kp COLON     &kp COMMA        &kp PERIOD  &kp SLASH         &kp RIGHT_BRACKET      &kp LEFT_BRACKET  &kp QUESTION              &none            &none           &none            &none
&none          &none         &none            &trans      &trans            &trans                 &trans            &trans                                                                      &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        ARROW_89 {
            bindings = <
&kp ESCAPE  &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &none                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none  &none  &none
&kp HOME    &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &none       &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none  &none  &none
&none       &kp LG(LS(LEFT_ARROW))  &none           &kp LG(LS(RIGHT_ARROW))  &none    &none       &none   &none                 &none                  &none  &none  &none
&none       &none                   &none           &trans                   &trans   &trans      &trans  &trans                                                     &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        default_layer {
            bindings = <
&kp Q           &kp W      &kp E         &kp R                        &kp T                                                        &kp Y         &kp U  &kp I      &kp O    &kp P
&kp A           &kp S      &kp D         &kp F                        &kp G      &kp PRINTSCREEN      &kp MINUS                    &kp H         &kp J  &kp K      &kp L    &kp SQT
&kp Z           &kp X      &kp C         &kp V                        &kp B      &kp SEMICOLON        &kp SQT                      &kp N         &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &lt_to_layer_0 2 LANGUAGE_2  &kp SPACE  &kp BACKSPACE        &lt_to_layer_0 1 LANGUAGE_1  &kp KP_ENTER                             &to 0
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
